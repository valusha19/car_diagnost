import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart'; // Import FirebaseFirestore
// –Ü–º–ø–æ—Ä—Ç–∏ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –≤—ñ–¥–∂–µ—Ç—ñ–≤
import 'package:car_diagnost/widgets/diagnostics_top_status.dart';
import 'package:car_diagnost/widgets/diagnostics_sliders.dart';
import 'package:car_diagnost/widgets/diagnostics_actions_grid.dart';
import 'package:car_diagnost/widgets/ai_assistant_bar.dart';
import 'package:car_diagnost/screens/vehicle_connection_app_ukrainian.dart';
import 'package:car_diagnost/screens/settings_screen.dart';

// –ì–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
class CarDiagnosticsUIScreen extends StatelessWidget {
  const CarDiagnosticsUIScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF1E1F26), // —Ñ–æ–Ω AppBar
      appBar: AppBar(
        backgroundColor: const Color(0xFF1E1F26),
        elevation: 0,
        leading: Builder(
          builder: (context) => IconButton(
            icon: const Icon(Icons.menu, color: Colors.white),
            onPressed: () {
              // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ drawer –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
              Scaffold.of(context).openDrawer();
            },
          ),
        ),
        title: const Text('–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è', style: TextStyle(color: Colors.white)),
        centerTitle: true,
      ),
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            DrawerHeader(
              decoration: const BoxDecoration(
                color: Color(0xFF1E1F26),
              ),
              child: const Text(
                '–ê–≤—Ç–æ–º–æ–±—ñ–ª—å',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 24,
                ),
              ),
            ),
            ListTile(
              leading: const Icon(Icons.directions_car),
              title: const Text('–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ñ –∑–∞—Å–æ–±–∏'),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const VehicleConnectionApp(),
                  ),
                );
              },
            ),
            ListTile(
              leading: const Icon(Icons.chat_bubble_outline),
              title: const Text('–°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ AI'),
              onTap: () {
                Navigator.pop(context);
                Navigator.pushNamed(context, '/chat');
              },
            ),
            ListTile(
              leading: const Icon(Icons.settings),
              title: const Text('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'),
              onTap: () {
                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const SettingsScreen(),
                  ),
                );
              },
            ),
            ListTile(
              leading: const Icon(Icons.feedback_outlined),
              title: const Text('–ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤\'—è–∑–æ–∫'),
              onTap: () {
                Navigator.pop(context);
                // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É
              },
            ),
            ListTile(
              leading: const Icon(Icons.star_outline),
              title: const Text('–û—Ü—ñ–Ω—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫'),
              onTap: () {
                Navigator.pop(context);
                // –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –æ—Ü—ñ–Ω–∫–∏
              },
            ),
          ],
        ),
      ),
      body: Container(
        color: Colors.grey[200], // —Ñ–æ–Ω —Ç—ñ–ª–∞
        child: Column(
          children: [
            const DiagnosticsTopStatus(), // –≤–µ—Ä—Ö–Ω—ñ–π –±–ª–æ–∫ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, —á–∞—Å, –æ–±–æ—Ä–æ—Ç–∏)
            const SizedBox(height: 16),
            const DiagnosticsSliders(),
            StreamBuilder<DocumentSnapshot>(
              stream: FirebaseFirestore.instance.collection('car_status').doc('current').snapshots(),
              builder: (context, snapshot) {
                if (snapshot.connectionState == ConnectionState.waiting) {
                  return const Center(child: CircularProgressIndicator());
                }
                if (!snapshot.hasData || snapshot.data?.data() == null) {
                  return const Center(
                    child: Text(
                      '–î–∞–Ω—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ',
                      style: TextStyle(color: Colors.red),
                    ),
                  );
                }

                final data = snapshot.data!.data() as Map<String, dynamic>;

                final bool tirePressureLow = data['tirePressureLow'] ?? false;
                final bool oilLevelLow = data['oilLevelLow'] ?? false;
                final bool batteryLow = data['batteryLow'] ?? false;

                return Column(
                  crossAxisAlignment: CrossAxisAlignment.stretch,
                  children: [
                    if (tirePressureLow)
                      ElevatedButton(
                        onPressed: () {
                          // Add functionality for tire pressure
                        },
                        style: ElevatedButton.styleFrom(backgroundColor: Colors.red),
                        child: const Text('üöó –ù–∏–∑—å–∫–∏–π —Ç–∏—Å–∫ —É —à–∏–Ω–∞—Ö'),
                      ),
                    if (oilLevelLow)
                      ElevatedButton(
                        onPressed: () {
                          // Add functionality for oil level
                        },
                        style: ElevatedButton.styleFrom(backgroundColor: Colors.orange),
                        child: const Text('üõ¢Ô∏è –ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å –º–∞—Å–ª–∞'),
                      ),
                    if (batteryLow)
                      ElevatedButton(
                        onPressed: () {
                          // Add functionality for battery level
                        },
                        style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),
                        child: const Text('üîã –ù–∏–∑—å–∫–∏–π –∑–∞—Ä—è–¥ –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞'),
                      ),
                  ],
                );
              },
            ),
            const SizedBox(height: 16),
            const DiagnosticsActionsGrid(), // —Å—ñ—Ç–∫–∞ –∑ –¥—ñ—è–º–∏
            const Spacer(),
            const AiAssistantBar(), // –Ω–∏–∂–Ω—è –ø–∞–Ω–µ–ª—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
          ],
        ),
      ),
    );
  }
}